{"version":3,"file":"app.js","sources":["../node_modules/composi/lib/h.js","../node_modules/composi/lib/patch.js","../dev/components/navigation.js","../dev/components/item.js","../node_modules/composi/lib/mixin.js","../node_modules/composi/lib/component.js","../dev/components/title.js","../dev/components/sort-button.js","../dev/components/reset-button.js","../dev/app.js"],"sourcesContent":["/**\n * Hyperscript function. Enables definition of HTML/SVG using functions.\n * @param {string} type The name of the HTML or SVG tag to create.\n * @param {object} props And object of property/value pairs.\n * @param {string, number, boolean, any[]} children Any child elements.\n */\nexport function h(type, props, ...args) {\n  let stack = [], node\n  const children = []\n  stack = stack.concat(args)\n\n  // Got thru stack from front.\n  while (stack.length) {\n    // If child is array, process.\n    if (Array.isArray((node = stack.shift()))) {\n      node.map(item => stack.push(item))\n    // Else check if child is string or number.\n    } else if (node != null && typeof node !== 'boolean') {\n      typeof node === \"number\" ? node = node + '' : node\n      children.push(node)\n    }\n  }\n  \n  return typeof type === \"string\" \n    ? {type, props: props || {}, children } \n    : type(props || {}, children)\n}\n","/**\n * A function to merge two objects together. The properties of the second object will overwrite any matching properties in the first object.\n * @param {Object} obj1 The first object to merge.\n * @param {Object} obj2 The second object to merge.\n */\nfunction mixin(obj1, obj2) {\n  const result = {}\n  for (let i in obj1) {\n    result[i] = obj1[i]\n  }\n  for (let i in obj2) {\n    result[i] = obj2[i]\n  }\n  return result\n}\n\n/**\n * @constructor \n * @param {node} oldNode Original node or null.\n * @param {node} node New node.\n * @param {node} element The component root element.\n * @param {node} container The container element in which component is rendered.\n */\nexport function patch(oldNode, node, element, container) {\n  return diffAndPatch(container || document.body, element, oldNode, node)\n}\n\n/**\n * Patch functions:\n * setProps \n * createNode\n * createElement\n * getKey\n * updateElement\n * removeElement\n * diffAndPatch\n */\n\n/**\n * Function to set properties and attributes on element.\n * @param {node} element \n * @param {string} name \n * @param {string|number|boolean} value \n * @param {string|number|boolean} oldValue \n */\nfunction setProps(element, name, value, oldValue) {\n  if (name === 'key') {\n  } else if (name === 'style') {\n    for (let name in mixin(oldValue, (value = value || {}))) {\n      element.style[name] = String(value[name]) || ''\n    }\n  } else {\n    try {\n      if (value === 0) value = String(value)\n      element[name] = value\n    } catch (err) {}\n\n    if (typeof value !== 'function') {\n      if (!!value) {\n        // Support SVG 'xlink:href' property:\n        if (name === 'xlink-href') {\n          element.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value)\n        } else {\n          element.setAttribute(name, value)\n        }\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n\n/**\n * Function to create an HTML or SVG node.\n * @param {node} node node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createNode(node, svg) {\n  const element = (svg = svg || node.type === \"svg\")\n  ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n  : document.createElement(node.type)\n\n  Object.keys(node.props).forEach(key => setProps(element, key, node.props[key]))\n  node.children.map(child => element.appendChild(createElement(child, svg)))\n  return element\n}\n\n/**\n * Function to convert hyperscript/JSX into DOM nodes.\n * @param {jsx|hyperscript} node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createElement(node, svg) {\n  return typeof node === \"string\" ? document.createTextNode(node) : createNode(node, svg)\n}\n\n/**\n * Function to get a node's key.\n * @param {node} node \n */\nfunction getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n\n/**\n * Update an element with new values for properties and/or children.\n * @param {Element} element \n * @param {node} oldProps \n * @param {object} props \n */\nfunction updateElement(element, oldProps, props) {\n  Object.keys(mixin(oldProps, props)).forEach(key => {\n    let value = props[key]\n    let oldValue = key === \"value\" || key === \"checked\" ? element[key] : oldProps[key]\n\n    if (value !== oldValue) setProps(element, key, value, oldValue)\n  })\n}\n\n/**\n * Function to remove element from DOM.\n * @param {node} container The container of the element to remove.\n * @param {node} element The element to remove.\n */\nconst removeElement = (container, element) => container.removeChild(element)\n\n/**\n * Function to patch DOM. Diffs virtual nodes, then patches the DOM.\n * @param {node} container \n * @param {node} element \n * @param {node} oldNode \n * @param {node} node \n * @param {boolean} svg \n * @param {node} nextSibling \n */\nfunction diffAndPatch(container, element, oldNode, node, svg, nextSibling) {\n  // There is no oldNode, so this is first render.\n  if (oldNode == null) {\n    element = container.insertBefore(createElement(node, svg), element)\n  // There's an oldNode, so patch.\n  } else if (node.type != null && node.type === oldNode.type) {\n    updateElement(element, oldNode.props, node.props)\n\n    svg = svg || node.type === \"svg\"\n    const len = node.children.length\n    let oldLen = oldNode.children.length\n    let oldKeyed = {}\n    let oldElements = []\n    let keyed = {}\n\n    let k = 0\n    while (k < oldLen) {\n      let oldElement = (oldElements[k] = element.childNodes[k])\n      let oldChild = oldNode.children[k]\n      let oldKey = getKey(oldChild)\n      if (null != oldKey) oldKeyed[oldKey] = [oldElement, oldChild]\n      k++\n    }\n\n    let i = 0, j = 0\n    while (j < len) {\n      let oldElement = oldElements[i]\n      let oldChild = oldNode.children[i]\n      let newChild = node.children[j]\n      let oldKey = getKey(oldChild)\n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n      \n      let newKey = getKey(newChild)\n      let keyedNode = oldKeyed[newKey] || []\n      if (null == newKey) {\n        if (null == oldKey) {\n          diffAndPatch(element, oldElement, oldChild, newChild, svg)\n          j++\n        }\n        i++\n      } else {\n        oldKey === newKey ? diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) && i++ :\n        keyedNode[0] ? element.insertBefore(keyedNode[0], oldElement) && diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) : diffAndPatch(element, oldElement, null, newChild, svg)\n        \n        keyed[newKey] = newChild\n        j++\n      }\n    }\n\n    while (i < oldLen) {\n      let oldChild = oldNode.children[i]\n      let oldKey = getKey(oldChild)\n      if (null == oldKey) removeElement(element, oldElements[i])\n      i++\n    }\n\n    Object.keys(oldKeyed).forEach(key => {\n      let keyedNode = oldKeyed[key]\n      let reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0])\n      }\n    })\n  } else if (element && node !== element.nodeValue) {\n    if (typeof node === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = node\n    } else {\n      element = container.insertBefore(\n        createElement(node, svg),\n        (nextSibling = element)\n      )\n      removeElement(container, nextSibling, oldNode.data)\n    }\n  }\n  return element\n}\n","import {h} from 'composi'\nimport Title from './title'\nimport SortButton from './sort-button'\nimport ResetButton from './reset-button'\n\nexport default function Navigation({lastUpdate, sortByScore,loadItems}) {\n  return (\n    <div class=\"navigation\">\n      <Title/>\n      <h4 class='last-update'>Last updated at {lastUpdate ? lastUpdate.toString() : 'never'}</h4>\n      <p class='sort-button--paragraph'>\n        <div class=\"top-items\">\n          <SortButton sortByScore={sortByScore}/> \n          <ResetButton loadItems={loadItems}/>\n        </div>\n      </p>\n    </div>\n  )\n}","import {h} from 'composi'\n\nlet getDomain = url => url && (url.split('/')[ ~url.indexOf('://') ? 2 : 0 ]).replace(/^www\\./,'') || null\n\nexport default function Item({item}) {\n\treturn (\n    <li class=\"item\">\n      <div class=\"vitals\">\n        <div class=\"score\">{item.score}</div>\n        <div class=\"comments\">\n          <a target=\"_blank\" href={`https://news.ycombinator.com/item?id=${item.id}`}>{item.descendants}</a>\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"title\">\n          <a target=\"_blank\" href={item.url}>{item.title}</a>\n          <span class=\"domain\">({ getDomain(item.url) })</span>\n        </div>\n      </div>\n    </li>\n  )\n}","/**\n * A mixin function used for updating component state.\n * @param {object} obj1 An object as the target.\n * @param {object} obj2 An object of properties to target.\n */\nexport const mixin = (obj1, obj2) => {\n  Object.keys(obj2).forEach(p => {\n    if (obj2.hasOwnProperty(p)) {\n      Object.defineProperty(obj1, p, {\n        value: obj2[p],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      })\n    }\n  })\n}\n","import {h} from './h'\nimport {patch} from './patch'\nimport {mixin} from './mixin'\n\nvar rAF = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || window.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16) }\n\n/**\n * @type {object} dataStore A pseudo-private property using Date object to store the component's state.\n */\nconst dataStore = new Date().getTime()\n\n/**\n * @class Class to create a component\n */\nexport class Component {\n  /**\n   * Constructor for Component class.\n   * @typedef {object} props An object of property/values to configure the class instance.\n   * @property {string|element} props.container The container element in which to render the component.\n   * @property {state} [props.state] The state object of the component. This can be of type boolean, string, number, object or array.\n   * @property {function} props.render A function that returns nodes to render to the DOM.\n   */\n  constructor(props) {\n    /** @type {props} */\n    if (!props) props = {}\n    this.selector = props.container || props.root ||  'body'\n    \n    if (props.render) {\n      this.render = props.render\n    }\n    \n    if (props.state) {\n      this.state = props.state\n    }\n\n    this.oldNode = null\n    if (this.selector) {\n      this.container = document.querySelector(this.selector)\n    }\n    this.componentShouldUpdate = true\n    \n    this.mounted = false\n    this.element\n    \n    /**\n     * Handle lifecycle methods.\n     */\n    if (props.beforeCreateComponent) {\n      this.beforeCreateComponent = props.beforeCreateComponent\n    }\n    if (props.componentWasCreated) {\n      this.componentWasCreated = props.componentWasCreated\n    }\n    if (props.componentWillUpdate) {\n      this.componentWillUpdate = props.componentWillUpdate\n    }\n    if (props.componentDidUpdate) {\n      this.componentDidUpdate = props.componentDidUpdate\n    }\n    if (props.componentWillUnmount) {\n      this.componentWillUnmount = props.componentWillUnmount\n    }\n  }\n\n  /**\n   * Define getters and setters for state.\n   */\n  set state(data) {\n    this[dataStore] = data\n    rAF(() => this.update())\n  }\n\n  get state() {\n    return this[dataStore]\n  }\n  \n  /**\n   * Method to set a component's state.\n   * @param {string|number|boolean|object|array} data The data to set.\n   * @param {number} [position] The index of an array whose data you want to set.\n   */\n  setState(data, position) {\n    if (typeof data === 'function') {\n      const state = data.call(this, this.state)\n      if (typeof state !== 'function' && !!state) this.setState(state)\n    }\n    if (Array.isArray(this.state)) {\n      const state = this.state\n      if (position || position === 0) {\n        if (typeof state[position] === 'object') {\n          mixin(state[position], data)\n          this.state = state\n        } else {\n          state[position] = data\n          this.state = state\n        }\n      } else {\n        this.state = state\n      }\n    } else if (typeof this.state === 'object') {\n      const state = this.state\n      mixin(state, data)\n      this.state = state\n    } else {\n      this.state = data\n    }\n  }\n\n  /**\n   * Function to render component after data changes.\n   * If data is passed as argument, it will be used.\n   * Otherwise state will be used.\n   * @param {boolean|number|string|object|array} [data ]\n   * @returns void\n   */\n  update(data) {\n    if (!this.render) return\n\n    // If componentShouldUpdate is set to false, render one time only.\n    // All other updates will be ignored.\n    if (!this.componentShouldUpdate && this.mounted) return\n\n    // If data is 0 or not boolean, use,\n    // else use component state.\n    let __data  = this.state\n    if (data !== true && data) __data = data\n\n    if (this.container && typeof this.container === 'string') {\n      this.selector = this.container\n      this.container = document.querySelector(this.container)\n    }\n\n    // Check if vnode already exists.\n    // Used for deciding whether to fire lifecycle events.\n    const __oldNode = this.oldNode\n    const __render = this.render\n    function testIfVNodesDiffer(data) {\n      try {\n        if (JSON.stringify(this.oldNode) === JSON.stringify(__render(data))) {\n          return false\n        } else {\n          return true\n        }\n      } catch(err) {\n        return true\n      }\n    }\n    // Create virtual dom and check if component id already exists in document.\n    const vdom = this.render(__data)\n    let elem\n    if (vdom && vdom.props && vdom.props.id) {\n      try {\n        elem = this.container.querySelector(`#${vdom.props.id}`)\n      } catch(err) {}\n    }\n\n    // If component element id already exists in DOM, \n    // remove it before rendering the component.\n    if (elem && !this.mounted) {\n      elem.parentNode.removeChild(elem)\n    }\n\n    // Patch DOM with component update.\n    this.element = patch(\n      this.oldNode,\n      (this.oldNode = this.render(__data)),\n      this.element,\n      this.container\n    )\n    if (this.mounted && this.oldNode && testIfVNodesDiffer(__data)) {\n      this.componentWillUpdate && this.componentWillUpdate(this)\n    } else {\n      this.beforeCreateComponent && this.beforeCreateComponent(this)\n      this.componentWasCreated && this.componentWasCreated(this)\n      this.mounted = true\n      return\n    }\n    this.componentDidUpdate && testIfVNodesDiffer(__data) && this.componentDidUpdate(this)\n  }\n  \n  /**\n   * Method to destroy component.\n   * First unbind events.\n   * Then remove component element from DOM.\n   * Also null out component properties.\n   * @returns void\n   */\n  unmount() {\n    const self = this\n    this.componentWillUnmount && this.componentWillUnmount(this)\n    this.container.removeChild(this.element)\n    this.container = undefined\n    for (let key in this) {\n      delete this[key]\n    }\n    delete this.state\n    this.update = undefined\n    this.unmount = undefined\n  }\n}\n\n// Polyfill for Element.closest:\nif (window.Element && !Element.prototype.closest) {\n  Element.prototype.closest = \n  function(s) {\n    let matches = (this.document || this.ownerDocument).querySelectorAll(s)\n    let i\n    let el = this\n    do {\n      i = matches.length\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while ((i < 0) && (el = el.parentElement))\n    return el\n  }\n}\n","import {h} from 'composi'\n\nexport default () => (\n\t<header>\n\t\t<h1>HackerNews Minimal</h1>\n\t\t<h5>Made with Composi</h5>\n\t</header>\n)","import {h} from 'composi'\n\nexport default function ({ sortByScore }) {\n  return <button class=\"button\" onclick={sortByScore}>Sort!</button>\n}","import {h} from 'composi'\n\nexport default function ({ loadItems }) {\n  return <button class=\"button\" onclick={loadItems}>Reset!</button>\n}","import {h, Component} from 'composi'\nimport Navigation from './components/navigation'\nimport Item from './components/item'\n\nconst API_ORIGIN = 'https://hacker-news.firebaseio.com'\n\nconst asJson = r => r.json()\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      lastUpdate: new Date(),\n      items: []\n    }\n  }\n\n  render(data) {\n    // bind sortByScore to \"this\" so that Navigation component has access to App's state.\n    return (\n      <div id=\"app\">\n        <Navigation lastUpdate={this.state.lastUpdate} sortByScore={this.sortByScore.bind(this)} loadItems={this.loadItems.bind(this)} />\n        <ul>\n          {\n            data.items.map(item => <Item item={item}/>)\n          }\n        </ul>\n      </div>\n    )\n  }\n  componentWasCreated() {\n\t\tthis.loadItems()\n\t}\n  loadItems() {\n\t\tfetch(`${API_ORIGIN}/v0/topstories.json`).then(asJson)\n\t\t\t.then( items => Promise.all( items.slice(0, 19).map(\n\t\t\t\titem => fetch(`${API_ORIGIN}/v0/item/${item}.json`).then(asJson)\n\t\t\t)) )\n\t\t\t.then( items => this.setState({ items }) )\n\t}\n  sortByScore() {\n\t\tlet items = this.state.items\n\t\titems.sort( (a, b) => b.score - a.score )\n\t\tthis.setState({ items })\n\t}\n}\n\nconst app = new App({\n  container: 'body'\n})\n"],"names":["h","type","props","stack","node","children","args","concat","length","Array","isArray","shift","map","push","item","mixin","obj1","obj2","result","i","setProps","element","name","value","oldValue","style","String","err","setAttributeNS","setAttribute","removeAttribute","createElement","svg","document","createTextNode","createElementNS","keys","forEach","key","appendChild","child","createNode","getKey","diffAndPatch","container","oldNode","nextSibling","insertBefore","oldProps","len","oldLen","oldKeyed","oldElements","keyed","k","oldElement","childNodes","oldChild","oldKey","j","newChild","newKey","keyedNode","removeElement","reusableNode","nodeValue","data","Navigation","lastUpdate","sortByScore","loadItems","class","Title","toString","SortButton","ResetButton","Item","score","target","href","id","descendants","url","title","removeChild","hasOwnProperty","p","defineProperty","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","dataStore","Date","getTime","Component","selector","root","render","state","this","querySelector","componentShouldUpdate","mounted","beforeCreateComponent","componentWasCreated","componentWillUpdate","componentDidUpdate","componentWillUnmount","position","call","setState","babelHelpers.typeof","testIfVNodesDiffer","JSON","stringify","__render","__data","vdom","elem","parentNode","body","patch","undefined","update","unmount","_this","Element","prototype","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","onclick","getDomain","split","indexOf","replace","API_ORIGIN","asJson","r","json","bind","items","then","Promise","all","slice","fetch","_this2","sort","a","b"],"mappings":"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"}